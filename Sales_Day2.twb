<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20191.19.0417.1429                               -->
<workbook original-version='18.1' source-build='2019.1.3 (20191.19.0417.1429)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
        <calculation class='tableau' formula='5' />
        <range granularity='1' max='25' min='1' />
      </column>
    </datasource>
    <datasource caption='Orders (Sample-Superstore-Subset-Excel)' inline='true' name='federated.0v0dcrf08wpate15jftcc17kel8l' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample-Superstore-Subset-Excel' name='excel-direct.1he8wvk0eimh0q1ev33eu0cgjs3p'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Term 1/EDA/Workspace/Sample-Superstore-Subset-Excel orginal.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='='>
              <expression op='[Orders].[Order ID]' />
              <expression op='[Returns].[Order ID]' />
            </expression>
          </clause>
          <relation connection='excel-direct.1he8wvk0eimh0q1ev33eu0cgjs3p' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:X9427:no:A1:X9427:0' header='yes' outcome='2'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order Priority' ordinal='1' />
              <column datatype='real' name='Discount' ordinal='2' />
              <column datatype='real' name='Unit Price' ordinal='3' />
              <column datatype='real' name='Shipping Cost' ordinal='4' />
              <column datatype='integer' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Ship Mode' ordinal='7' />
              <column datatype='string' name='Customer Segment' ordinal='8' />
              <column datatype='string' name='Product Category' ordinal='9' />
              <column datatype='string' name='Product Sub-Category' ordinal='10' />
              <column datatype='string' name='Product Container' ordinal='11' />
              <column datatype='string' name='Product Name' ordinal='12' />
              <column datatype='real' name='Product Base Margin' ordinal='13' />
              <column datatype='string' name='Region' ordinal='14' />
              <column datatype='string' name='State or Province' ordinal='15' />
              <column datatype='string' name='City' ordinal='16' />
              <column datatype='integer' name='Postal Code' ordinal='17' />
              <column datatype='date' name='Order Date' ordinal='18' />
              <column datatype='date' name='Ship Date' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
              <column datatype='integer' name='Quantity ordered new' ordinal='21' />
              <column datatype='real' name='Sales' ordinal='22' />
              <column datatype='integer' name='Order ID' ordinal='23' />
            </columns>
          </relation>
          <relation connection='excel-direct.1he8wvk0eimh0q1ev33eu0cgjs3p' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B1635:no:A1:B1635:0' header='yes' outcome='2'>
              <column datatype='integer' name='Order ID' ordinal='0' />
              <column datatype='string' name='Status' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Customer Segment]' value='[Orders].[Customer Segment]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Order Priority]' value='[Orders].[Order Priority]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product Base Margin]' value='[Orders].[Product Base Margin]' />
          <map key='[Product Category]' value='[Orders].[Product Category]' />
          <map key='[Product Container]' value='[Orders].[Product Container]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Product Sub-Category]' value='[Orders].[Product Sub-Category]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity ordered new]' value='[Orders].[Quantity ordered new]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[Shipping Cost]' value='[Orders].[Shipping Cost]' />
          <map key='[State or Province]' value='[Orders].[State or Province]' />
          <map key='[Status]' value='[Returns].[Status]' />
          <map key='[Unit Price]' value='[Orders].[Unit Price]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Priority</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order Priority]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Priority</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit Price</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Unit Price]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Unit Price</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Shipping Cost</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Shipping Cost]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Shipping Cost</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Segment</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Category</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Sub-Category</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Container</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Container]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Container</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Base Margin</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Product Base Margin]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Base Margin</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State or Province</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State or Province]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State or Province</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>17</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>18</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>19</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity ordered new</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity ordered new]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity ordered new</remote-alias>
            <ordinal>21</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>22</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>23</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:X9427:no:A1:X9427:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Status]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Status</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RIN_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B1635:no:A1:B1635:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Sales:qk]&quot;' value='Sales in 2013' />
        </aliases>
      </column>
      <column caption='Profit Category' datatype='string' name='[Calculation_1065101370895462400]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Profit] &lt; 500 THEN &quot;Low Profit Shippment&quot;&#13;&#10;ELSE &quot;High Profit Shippment&quot;&#13;&#10;END' />
      </column>
      <column caption='Profit Category(low,medium,high)' datatype='string' name='[Calculation_1065101370897231873]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Profit] &lt; 500 THEN &quot;Low Profit&quot;&#13;&#10;ELSEIF [Profit] &gt;= 500 AND [Profit] &lt; 1000 THEN &quot;Medium profit&quot;&#13;&#10;ELSE &quot;High profit&quot; &#13;&#10;END' />
      </column>
      <column caption='Sales in 2014' datatype='real' name='[Calculation_1065101370901245956]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Sales] * 1.1' />
      </column>
      <column caption='weekday vs weekend' datatype='string' name='[Calculation_1065101370906750985]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DATENAME(&apos;weekday&apos;, [Order Date]) = &apos;Saturday&apos; OR &#13;&#10;DATENAME(&apos;weekday&apos;, [Order Date]) = &apos;Sunday&apos;&#13;&#10;THEN &quot;Weekend&quot;&#13;&#10;ELSE &quot;Weekday&quot;&#13;&#10;END' />
      </column>
      <column caption='orders less than 3 days' datatype='string' name='[Calculation_1065101370908426250]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt; 3&#13;&#10;THEN &quot;Shipped &lt; 3 days&quot;&#13;&#10;ELSE &quot;shipped &gt;= 3 days&quot;&#13;&#10;END' />
      </column>
      <column caption='Profit to Sales' datatype='real' name='[Calculation_772085920166879232]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[Profit] / [Sales]' />
      </column>
      <column caption='Index Rank' datatype='integer' name='[Calculation_772085920176467969]' role='measure' type='ordinal'>
        <calculation class='tableau' formula='INDEX()'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Filter condition' datatype='boolean' name='[Calculation_772085920179785731]' role='measure' type='nominal'>
        <calculation class='tableau' formula='[Calculation_772085920176467969] &lt;= [Parameters].[Parameter 1]'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='integer' name='[Customer ID]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Order ID (Returns)]' role='dimension' type='ordinal' />
      <column datatype='integer' name='[Order ID]' role='dimension' type='ordinal' />
      <column datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State or Province]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Status1' datatype='string' name='[Status]' role='dimension' type='nominal' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.545055' measure-ordering='alphabetic' measure-percentage='0.404396' parameter-percentage='0.0505495' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
          <calculation class='tableau' formula='5' />
          <range granularity='1' max='25' min='1' />
        </column>
      </datasource-dependencies>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 1'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Which product has highest profit to sales ratio?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample-Superstore-Subset-Excel)' name='federated.0v0dcrf08wpate15jftcc17kel8l' />
          </datasources>
          <datasource-dependencies datasource='federated.0v0dcrf08wpate15jftcc17kel8l'>
            <column caption='Profit to Sales' datatype='real' name='[Calculation_772085920166879232]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Profit] / [Sales]' />
            </column>
            <column datatype='string' name='[Product Name]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_772085920166879232]' derivation='Max' name='[max:Calculation_772085920166879232:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Product Name]' derivation='None' name='[none:Product Name:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Product Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0v0dcrf08wpate15jftcc17kel8l].[max:Calculation_772085920166879232:qk]' shelf='columns' />
          </shelf-sorts>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0v0dcrf08wpate15jftcc17kel8l].[max:Calculation_772085920166879232:qk]' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0v0dcrf08wpate15jftcc17kel8l].[max:Calculation_772085920166879232:qk]</rows>
        <cols>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Product Name:nk]</cols>
      </table>
      <simple-id uuid='{BFA855D9-A2A7-4954-A56B-F38CBC134A97}' />
    </worksheet>
    <worksheet name='Sheet 2'>
      <layout-options>
        <title>
          <formatted-text>
            <run>How many shippment in low profit and high profit category ( low profit mean profit less than 500 and&#10;high profit mean &gt;= 500 )</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample-Superstore-Subset-Excel)' name='federated.0v0dcrf08wpate15jftcc17kel8l' />
          </datasources>
          <datasource-dependencies datasource='federated.0v0dcrf08wpate15jftcc17kel8l'>
            <column caption='Profit Category' datatype='string' name='[Calculation_1065101370895462400]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Profit] &lt; 500 THEN &quot;Low Profit Shippment&quot;&#13;&#10;ELSE &quot;High Profit Shippment&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1065101370895462400]' derivation='None' name='[none:Calculation_1065101370895462400:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Calculation_1065101370895462400:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{3A47CB54-44C1-4CD0-B20C-7070B36D82F5}' />
    </worksheet>
    <worksheet name='Sheet 3'>
      <layout-options>
        <title>
          <formatted-text>
            <run>How many shippment in low profit, medium profit and&#10;high profit category ( low profit mean profit less than&#10;500, medium profit mean &gt;= 500 but less than 1000&#10;and high profit mean &gt;= 1000)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample-Superstore-Subset-Excel)' name='federated.0v0dcrf08wpate15jftcc17kel8l' />
          </datasources>
          <datasource-dependencies datasource='federated.0v0dcrf08wpate15jftcc17kel8l'>
            <column caption='Profit Category(low,medium,high)' datatype='string' name='[Calculation_1065101370897231873]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Profit] &lt; 500 THEN &quot;Low Profit&quot;&#13;&#10;ELSEIF [Profit] &gt;= 500 AND [Profit] &lt; 1000 THEN &quot;Medium profit&quot;&#13;&#10;ELSE &quot;High profit&quot; &#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1065101370897231873]' derivation='None' name='[none:Calculation_1065101370897231873:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Calculation_1065101370897231873:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{121C8E28-BE7B-45C0-8FAD-FB244D49D269}' />
    </worksheet>
    <worksheet name='Sheet 4'>
      <layout-options>
        <title>
          <formatted-text>
            <run>if 2013 sales numbers were expected to increase by 10% in the following year in all customer segments, what would be the total estimated sales for home office in 2014</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample-Superstore-Subset-Excel)' name='federated.0v0dcrf08wpate15jftcc17kel8l' />
          </datasources>
          <datasource-dependencies datasource='federated.0v0dcrf08wpate15jftcc17kel8l'>
            <column caption='Sales in 2014' datatype='real' name='[Calculation_1065101370901245956]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[Sales] * 1.1' />
            </column>
            <column datatype='string' name='[Customer Segment]' role='dimension' type='nominal' />
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Segment]' derivation='None' name='[none:Customer Segment:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1065101370901245956]' derivation='Sum' name='[sum:Calculation_1065101370901245956:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v0dcrf08wpate15jftcc17kel8l].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Sales:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Calculation_1065101370901245956:qk]&quot;' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0v0dcrf08wpate15jftcc17kel8l].[yr:Order Date:ok]'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2013' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v0dcrf08wpate15jftcc17kel8l].[yr:Order Date:ok]</column>
            <column>[federated.0v0dcrf08wpate15jftcc17kel8l].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0v0dcrf08wpate15jftcc17kel8l].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Customer Segment:nk]</rows>
        <cols>[federated.0v0dcrf08wpate15jftcc17kel8l].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{3BE8F97F-C5B5-476A-B9E7-1C52E991BCEB}' />
    </worksheet>
    <worksheet name='Sheet 5'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Total sales on weekend vs weekday ( saturday and sunday is weekend )</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample-Superstore-Subset-Excel)' name='federated.0v0dcrf08wpate15jftcc17kel8l' />
          </datasources>
          <datasource-dependencies datasource='federated.0v0dcrf08wpate15jftcc17kel8l'>
            <column caption='weekday vs weekend' datatype='string' name='[Calculation_1065101370906750985]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATENAME(&apos;weekday&apos;, [Order Date]) = &apos;Saturday&apos; OR &#13;&#10;DATENAME(&apos;weekday&apos;, [Order Date]) = &apos;Sunday&apos;&#13;&#10;THEN &quot;Weekend&quot;&#13;&#10;ELSE &quot;Weekday&quot;&#13;&#10;END' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_1065101370906750985]' derivation='None' name='[none:Calculation_1065101370906750985:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Calculation_1065101370906750985:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{7F41AA47-0BCC-4386-8B04-A967F9149D4F}' />
    </worksheet>
    <worksheet name='Sheet 6'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Number of orders shipped in less than 3 days</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample-Superstore-Subset-Excel)' name='federated.0v0dcrf08wpate15jftcc17kel8l' />
          </datasources>
          <datasource-dependencies datasource='federated.0v0dcrf08wpate15jftcc17kel8l'>
            <column caption='orders less than 3 days' datatype='string' name='[Calculation_1065101370908426250]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF DATEDIFF(&apos;day&apos;,[Order Date],[Ship Date]) &lt; 3&#13;&#10;THEN &quot;Shipped &lt; 3 days&quot;&#13;&#10;ELSE &quot;shipped &gt;= 3 days&quot;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='date' name='[Ship Date]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_1065101370908426250]' derivation='None' name='[none:Calculation_1065101370908426250:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows total='true'>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Calculation_1065101370908426250:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{B5D32F7C-286B-4AE7-AD9C-D1A048A1F195}' />
    </worksheet>
    <worksheet name='Sheet 7'>
      <layout-options>
        <title>
          <formatted-text>
            <run>find the total sales value for 2010 orders, shipped with &quot;low&quot; priority</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample-Superstore-Subset-Excel)' name='federated.0v0dcrf08wpate15jftcc17kel8l' />
          </datasources>
          <datasource-dependencies datasource='federated.0v0dcrf08wpate15jftcc17kel8l'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Order Priority]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Order Priority]' derivation='None' name='[none:Order Priority:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Order Priority:nk]'>
            <groupfilter function='member' level='[none:Order Priority:nk]' member='&quot;Low&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0v0dcrf08wpate15jftcc17kel8l].[yr:Order Date:ok]' context='true'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2010' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v0dcrf08wpate15jftcc17kel8l].[yr:Order Date:ok]</column>
            <column>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Order Priority:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{2496DC0B-41F4-42E9-B33F-3014FB938EBE}' />
    </worksheet>
    <worksheet name='Sheet 8'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Top 5 customers from each region based on sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample-Superstore-Subset-Excel)' name='federated.0v0dcrf08wpate15jftcc17kel8l' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Top N' datatype='integer' name='[Parameter 1]' param-domain-type='range' role='measure' type='quantitative' value='5'>
              <calculation class='tableau' formula='5' />
              <range granularity='1' max='25' min='1' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0v0dcrf08wpate15jftcc17kel8l'>
            <column caption='Index Rank' datatype='integer' name='[Calculation_772085920176467969]' role='measure' type='ordinal'>
              <calculation class='tableau' formula='INDEX()'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Filter condition' datatype='boolean' name='[Calculation_772085920179785731]' role='measure' type='nominal'>
              <calculation class='tableau' formula='[Calculation_772085920176467969] &lt;= [Parameters].[Parameter 1]'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_772085920176467969]' derivation='User' name='[usr:Calculation_772085920176467969:ok:7]' pivot='key' type='ordinal'>
              <table-calc level-break='[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Customer Name:nk]' ordering-type='Field'>
                <order field='[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Region:nk]' />
                <order field='[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Customer Name:nk]' />
                <sort direction='DESC' using='[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Sales:qk]' />
              </table-calc>
            </column-instance>
            <column-instance column='[Calculation_772085920179785731]' derivation='User' name='[usr:Calculation_772085920179785731:nk:1]' pivot='key' type='nominal'>
              <table-calc ordering-type='Columns' />
              <table-calc field='[federated.0v0dcrf08wpate15jftcc17kel8l].[Calculation_772085920176467969]' level-break='[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Customer Name:nk]' ordering-type='Field'>
                <order field='[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Region:nk]' />
                <order field='[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Customer Name:nk]' />
                <sort direction='DESC' using='[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Sales:qk]' />
              </table-calc>
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v0dcrf08wpate15jftcc17kel8l].[usr:Calculation_772085920179785731:nk:1]'>
            <groupfilter function='member' level='[usr:Calculation_772085920179785731:nk:1]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Customer Name:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0v0dcrf08wpate15jftcc17kel8l].[usr:Calculation_772085920179785731:nk:1]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='display' field='[federated.0v0dcrf08wpate15jftcc17kel8l].[usr:Calculation_772085920176467969:ok:7]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>([federated.0v0dcrf08wpate15jftcc17kel8l].[none:Region:nk] / ([federated.0v0dcrf08wpate15jftcc17kel8l].[usr:Calculation_772085920176467969:ok:7] / [federated.0v0dcrf08wpate15jftcc17kel8l].[none:Customer Name:nk]))</rows>
        <cols>[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{AFE0A949-3BC2-4667-AC1F-DB7DEB9C38F4}' />
    </worksheet>
    <worksheet name='Sheet 9'>
      <layout-options>
        <title>
          <formatted-text>
            <run>Find the sale value for items ordered in 2012. Exclude the value of items which were returned?</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders (Sample-Superstore-Subset-Excel)' name='federated.0v0dcrf08wpate15jftcc17kel8l' />
          </datasources>
          <datasource-dependencies datasource='federated.0v0dcrf08wpate15jftcc17kel8l'>
            <column datatype='date' name='[Order Date]' role='dimension' type='ordinal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column caption='Status1' datatype='string' name='[Status]' role='dimension' type='nominal' />
            <column-instance column='[Status]' derivation='None' name='[none:Status:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Order Date]' derivation='Year' name='[yr:Order Date:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Status:nk]'>
            <groupfilter function='member' level='[none:Status:nk]' member='%null%' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0v0dcrf08wpate15jftcc17kel8l].[yr:Order Date:ok]' context='true'>
            <groupfilter function='member' level='[yr:Order Date:ok]' member='2012' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0v0dcrf08wpate15jftcc17kel8l].[yr:Order Date:ok]</column>
            <column>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Status:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0v0dcrf08wpate15jftcc17kel8l].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{B2DD350E-03F5-473F-9346-107F1FE04FA0}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-height' />
        <highlight>
          <color-one-way>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Product Name:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{657D2BE1-830A-4982-B34F-9F8AFC60590B}' />
    </window>
    <window class='worksheet' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Calculation_1065101370895462400:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3F2E3DD7-CE82-46D4-A32A-C752C5B5A8C0}' />
    </window>
    <window class='worksheet' name='Sheet 3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Calculation_1065101370897231873:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{781272BB-B1BE-4EA2-9F93-ACBE88830FC6}' />
    </window>
    <window class='worksheet' name='Sheet 4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Customer Segment:nk]</field>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{06B7D693-1AE2-43F5-8F80-2CAE5CC50C73}' />
    </window>
    <window class='worksheet' name='Sheet 5'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='37'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Calculation_1065101370906750985:nk]</field>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[wd:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{34316412-95D8-485B-9EFF-E6B84292EC70}' />
    </window>
    <window class='worksheet' name='Sheet 6'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Calculation_1065101370908426250:nk]</field>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Order ID:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{84A5D4D4-3B23-40F7-AB09-73BBD377A2A4}' />
    </window>
    <window class='worksheet' name='Sheet 7'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Customer Segment:nk]</field>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Order Priority:nk]</field>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{33540C9E-83C2-4BF4-80AA-65AE15960E05}' />
    </window>
    <window class='worksheet' name='Sheet 8'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card mode='slider' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Customer Name:nk]</field>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Region:nk]</field>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[usr:Calculation_772085920176467969:ok]</field>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[usr:Calculation_772085920179785731:nk:1]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5BDDAEB8-3B89-488A-85B7-9FBC51A70EA6}' />
    </window>
    <window class='worksheet' maximized='true' name='Sheet 9'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Product Name:nk]</field>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[none:Status:nk]</field>
            <field>[federated.0v0dcrf08wpate15jftcc17kel8l].[yr:Order Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{ACED6364-BA79-4641-9E62-6BE6E9D920C1}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9WY8kWXag95m5+b6GL+FL7HtERu5ZlbVXV3WR3aREaqiBlgEEQXrQ/IQB
      CEgPfNACAfoDEmdGgKAHAoI4XERyhsNpdndtuVTuEZGxrx4e4eH77m7uZqaHyIwMd7PIrOqV
      TbcPmQ/hdu369Wv32D333HPOFTRN0zAx6VPEX3cDTEx+nZgCYNLXmAJg0teYAmDS15gCYNLX
      mAJg0teYAmDS15gCYNLXmAJg0teYAmDS15gCYNLXdAlAu93+dbXDxOTXgjkDmPQ1pgCY9DWm
      AJj0NaYAmPQ10vk/NE3j0foh//tfPjIs/Ef/7ccEvY5fScNMTH4VdAmAIAh0VIGjXNWwsCha
      sNlsv5KGmZj8KjBVIJO+xhQAk77GFACTvsYUAJO+xhQAk77GFACTvsYUAJO+xhQAk77GFACT
      vsYUAJO+xhQAk77GFACTvsYUAJO+xhQAk77GFACTvsYUAJO+xhQAk77GFACTvkYXE9zpdC4s
      3O60kWX5l94oE5NfFbqYYEmSLiqLVbKaMcEm/6gwVSCTvsYUAJO+xhQAk77mYoX/NfwP//JH
      PNs+0X3+3uIwf/hfffhzN8rE5FeFOQOY9DWmAJj0NaYAmPQ1pgCY9DWmAJj0NaYAmPQ1pgCY
      9DWmAJj0NaYAmPQ1pgCY9DWmAJj0NaYAmPQ1pgCY9DWmAJj0NT9TTLCmaYbXVVU1Y4ZNfqP4
      mWKCBUEwvC6KohkzbPIbhakCmfQ1pgCY9DWmAJj0NaYAmPQ1pgCY9DWmAJj0NaYAmPQ1pgCY
      9DWmAJj0NaYAmPQ1pgCY9DWmAJj0NaYAmPQ1pgCY9DWmAJj0NaYAmPQ1pgCY9DW68C9VUS4s
      rCgKnU7nwpDIN4VUmpj8Q0MnAIJoHO4IIIoCoiheGBIpCKfXTUx+U9ALgHDxABYE8Y0D3BQA
      k98kzNFq0teYAmDS15gCYNLXmAJg0teYAmDS15gCYNLXmAJg0teYAmDS15gCYNLXmAJg0teY
      AmDS15gCYNLXmAJg0teYAmDS15gCYNLXmAJg0teYAmDS1+giwjRNvbCwpqmo6sXX4fSo1Fy5
      wb/5fNXw+u+/P0t0wP0dm2li8stBLwCqccA7gKpqqKr62qB4VVUpVhr81dcbhmXeXxwm4nf+
      jM01MfnFohMA0WK5sLDFYkGSpNcGxUuShOW1dYhIksSjjWMOM2Xd9YDXwYdXRr9N201Mfm4u
      PhX7l8yPH+/y40e7us9nR0KmAJj8yjAXwSZ9jSkAJn2NKQAmfc2vbQ3wJmpNmf/tT742vPaf
      fW+BxYnBX3GLTP4x8g9WADqKysP1I8Nrn92a+BW3xuQfK/9gBeDb8H/9uyf8vz95rvs85HPy
      r//wnwDwr/7qEYrB5t17i8NcmYxSa8iUai3D+hNh7y+2wSb/4PiNFoBvw1/f2aCj6AUgOuDh
      ymSUHz/e4//4yweG9/75//zPftnNM/k1849eAH4R/OjhDvVmW/f5ZGKAS+ORX0OLTH5RmALw
      LfiTHy2Rztd0n/+TD+e4NB7hzkqS/+X//sLw3n/9h/8JIZ+Lv/xqjaNcVXd9KjHAZ7cmyRRr
      F/pP/cGH8wya/lO/FEwB+BXx1VKSld2M7vMPr4zy2a1JitXWhf5Tn1wfNwXgl4QpAL9B/Ku/
      esj91ZTu86mhIP/in71PU+7wd99sG957ay5OPGQu6nsxBeA3iEKlaahGBTwOAOqtNn/8/z00
      vDfk/4B4yMv/+TeP+TMDVWtwwM0f/4vfB+AP/vs/wcjh95//3k1+7/1Z/vLLNf7lXz3SXbeI
      An/6P/6XAPx3/+tfkCnVdWX+6ccL/De/c43tVIG/e2AsrP/1D67itFv58y/WSBf0v3dmKMin
      NydIF6r8+RdrhnX8048XCPtdFCoNGi39sV12q4WQ32UKgMl352KH+W/Pcb56ocr3X3y6iNNu
      5aulfVb3c7rr37s+xqc3JyhWmhfW8dnNCcJ+F3/8lw/5culAd/3yxCD/0z//vukKYdLfmAJg
      0teYAmDS15gCYNLXCNq5AN9ms0m7fbrjKcsyongavgivDsm22WxnIZHfqky7jQBYrVbgNGi+
      3W5jtVrPjlR9+Z3fpYymaciyjGS1YnlRptPpoKoqNputu8y5MM3eMgCtVqurzMvfYbfbz8r8
      wvpDlhEE4ZfWH+fL/Cz9YVTml98fIlar9Gvpjy4BeFmpiUm/YKpAJn2NKQAmfY0pACZ9jSkA
      Jn2NKQAmfY3OF0hRlF9HO0xMfi3oZgBBEM7+9/4tCAKqqnb9rWla19+Koujq6K2nt0xvHb3f
      YdSWN9Xx0rr7Xdraex0wrPdNv9fss9+cPtPnBhUv1opedtD5Mr3lBUF4bR1GZURRBE2lo4Jk
      Ebt+/Heqo6etbyrzpusvM2H3lpEbVTqiA5ddeuPv/VnaYcS3aatRnylKB1G0nF17Xb9f1FZF
      URBEEfGiOtQOxWqTgM9zYZ+98fdqKsVylYDfd2E7NFVBRcQi6tvxrfusZ5x11WCY1FbTaLVa
      ry2jKW3kjmp4XdMU8pkTGvIr1crwe+Qa2XLjVUMNqNVqqC+E0LAOpU213jqrw0iAysUczRdt
      Mf69Ki35dFfxok4WRAuiKLymDo1q7VUIpb4OjWazeeZWfFEy4Tf1O2qHVlu54DtOyeVyZ779
      hnV0mmSL1bM6jPqsUsojt42f7ykCknT6+UV9pnTks+QEb6rjot+jNMoUqvJr6vgWfSZXyJZf
      jZGub7moE8uVymkTL/hxWrtOpdHprqNxzJ0nu2QP1tg6ynP33jev/x5NRVFezTCCIIDaIZ/N
      kE6nSafTfHX37pmgvaxDblTPrqcP1rn3fO+srUYP0+X2YZXEi9uhKpSrtdfWITeqZwL9sg6t
      03rVjvQRX95/ZNhn6b3nPLx7lztffcFa+vUC/7LfLyzTaVKuy9191oOiKGeCZliHxYbP7Xjt
      73W6PEgW4eI61A6l8pv6rEajrZ8dztBUSqXyWR2G40xTUQy0kPO8sc8kJz6X9ez6t7ICvck9
      QlM6ZwPzDIudWuGYbKGM1WZ/7bkDoNGR3CRCPXGvmszS0iovb1UURReNUTzeZ/+k9KK8ZpgC
      5fSShgZUSjma7dcs9AUBq2QcJ6QqMtl0moZmJ+Dq7hO1XWbp+e7Z352O8XdIFpHkSYXxRIA3
      nDXyZrcU1aDfX9Cs16lXCohWF+L58ahp3ec7qB2acsfwzAdZltE0jUa9Sud1z89iIxENvbap
      itJGueDZACCIJOIx3cea0qaQz1NvtpHcQQZ9doObX2HYZy/OrVAUBaXd6tZG/uiP/uiPXtvw
      dotWB5wOm+6aqsgcJFNIkhWX14f1vDhZnMQDNlKZEiBw+eoV7Fb9lNQqJVlaO2R3/Rl1R4Sw
      99wPFK0MDPiw221YbU7i0UFcLhfiuTeMw+3B4/UTCngQLHYi4SAug7aeHGySypZxByJ4XTYu
      XF1oGh1Fw2bTd+Te6mOybRvFgxU6ngR+5ytBESQXXreVgXAElDaRaBSPS38QiN3hwmqBtsXH
      zGike3CeNoB6KctJpU2rVsXv9/VcVlFePExVtOF12bv64yVffflT8icZ1g+PmRwfw/LyizSF
      5P4uLc2Gy2FFECVa1RyHuSpB/6uYYVVV+PruPeLxGFtryzgCcVy2V89PUxU6HQVVPT01SEM4
      UwvPU87nUCw2tE4Li82FTep558o1Ng5zBH1OtnYPCA4Eui6vPrpLoa2xvblNfGj4bCY6j9KW
      0QQRuV5FVgWcjh4haddIZ/Ps7u6SyRVx+0O4HafP7uKQyHaNe083kKtFVLuXj9+9pSuSS27w
      +f1tPrkcI1Wy8vb4uYel1Pnm4QqJiQmQqzx+tsrHt6/o6lDbTVbX1rkyPUi+3IL4+Ystnj95
      SmBoDJvWZP+kxgfvDnTdv7+zhiM6T+qbr2lKdiz+UcJ+fQaF6Mg07D3nzhdfEIwPc/vq3NlU
      3Sgdc+/hGj6Xg7Is4x0c4+ac/owCq2Q5XYc0O2dq1FlTm1merWxh15bwxBOUijKxcFBXx8ne
      OjVLlLC8w0oqwtWhnraqHZ7cv0vJM4azXWRkZLj7eqdBNl8hk8m++F1ThifujMcj5DUvs6Lc
      LSCiRCwe5+Q4xd3VDJooEUsMMxzvzrVaL2ZIpQ5ZX/Nj8yfwu7qHilwrsrH3KnWlL5xgNKb/
      vQfb64Rmb9BMbqIOXmMycq6tmsr+5hJ3lo+pZoeoqg6mJ7vvP6rIfHprjvt3vqDdUbD3zs5y
      gb//6RIBl4A0EKSYr/PJB291FWnICoIgEo1GAXDbX9VxsQokiHQqx1j8I9hE46nL4fZhF2RW
      t0+IDvQ8BLlCS/IRCg4QGozSqhUN67A5w3z2u7/D2Pg4Y0FH98V2gzoOIqEBguFB1HYNtWcq
      1jpt8vk8e+U2l8ejVGv6QGyAzOEmBS3ID3/wfYZ6Uh5WsykGpq6Tq1T46O2rFPP6OFQAyR1k
      dmyItz/+jKine4bQWlVwBBFQCQRCtGV9HqHjvXW2D7OcHGyRzFSwWwy6XxDxe13UcofIgkt/
      3erGa6nTEAIsLl6+8Lgpr89LPrXNYVbfDqvdxdDwKNdu3ea9d95mYiSOo2d29gRj3Lp8lZnF
      RdySTFPuHgOaptLpdF79v0C9mbs0z/H2GmUhzFi45/kiMDJ7jY9u32Bm4QpvX57R3X91dpzV
      58/x+kMc7G5RqvckKGtVsAwMExpwEY6Oo3X0QfQAdJrcefhM9/HFKpAo4XG5ELUW0eFpPM7u
      B14pZCg1FOKxKIFojEjA1z29SS78DoV8qUIuk2Vq4Spuh4F+ZhFY++YrUjWJ6YkE0vlp1GIn
      6LGQy5co5LIkJuYJeJ1d6otvIIxFaeAPRnG7PYRDQexW/cS2u5NkcmaS5PYKvsgYzvPTuSJz
      lD5BQKXeaGJz+YmFA7o66tldHm4cYxU0nG4P1nMDWLD7sXfy2P1hlGaD0YkZ3M5uVcwTCBEe
      8CC3ZKwuP4lopKsdL3EGoixMTxEfHMBu06tzqB1WV55RKJUQnX7dswG4f/cOHYcfBy0Sw6Ov
      VKCXtHJ8/fiAkaEIF1mbU9vPqWEltbdPJDGC45yOK9ndxGJR7IKCrGi43L6zxfR5itk0LSSi
      8QRuR4/qKQgISouVe5+zWbWRSe0xNjLUdb/LGyASiZz+D4d1gordjd9uITE6gc8BzaZGpGfm
      tdoceJw2UtkyVxZmu8bpxTNAu8aTtQMig4MsPXusu3y8v8XKygoVWcDjdGHp7cXKIWsFkbAL
      qi2F5aVlXR35o10eP1lGFqwInTr5UqO7QCPHcqrG8KCLbLHB5upzOkr3DGCx2gkPxhkbGsTh
      8eNzGS+SHFqNpdVN9pJZLD1vXk9kjNs3rvDhBx+wsHiF6/Pjuvtb1Tw7qRIjw0MMBPw6XVRr
      l9k+yHOws0EhnyGZzhu2o5xLYw0MsXhpgYBbP3A7rTr3Hj0BQePO3Xu666XjQ2qil6FYCEHp
      YLlgoTw1NctQ0InkGjBYZwCiA0s7y4OHD18ZEXqYXZhma22HwVgCp91AW65neHT/Ls+TBXaT
      xpm8g7Exoh64/9Xn3Hm4hNzz/E6lTyV/tEddeX2SknYlw4NnG90LckVFUeRT69tJnt2kPgNE
      8eSQ5xs7+J0Sz58/J1dpvuqGC7/NYsNr6XCY3Mfh0et201ff4bd/+zO8apGnT56Sq8k9JTSq
      xQLJ1BGDY7PQ0asmwfg416/M47A5sAoadoPFa71S5ORgF8/QHDaxfbYP0IVc4cmTpyytrJEt
      Vg0tGhNX3mI46Oftd27jsRvZh8tsJTOG+XDQNO7fe8iVd94jtbfJQMDf9fYHUGs5FNcgLqeT
      ucs3KWf2DSoCSRQ43NtifWODUkOfr6aQPaaYz7G9vcP85Ru662vbO1hQ6Ugero97WdnrUdfU
      DoV8FpvHRzgcZ3Js2FgArE58TolQKKyfHV7wzeMNsLRpVU4o6Z4vIFnxRofxqQ2EC8yS6d3n
      7BatfPrJB4zGgmjnTV+aRgcb7/zWH/B7n77HZ+9dN3x2nXaLZqNOttJhYWaULvOZWufp0uar
      sgauPIFIgpnZOW7euM7CwgIh76uZ6mIVSBCxiRqlWovxiUmd+pJLJ9ne3qEtuRkemyQR8nVP
      pTYPEY9ER3QSj/gI+IK43Xp9tZHdJCkPcj3W4XFaYCzieXVRcjDod1FXrAzHggS8Abwel37K
      Fi10WnVKhQLV7CEFIUikx1y2+uQB99Z2sctFRG+sy6Jx2pFt7n35Faok0dEseHpmkp39HZx2
      J6nUIU63B5vDhXReBXL4kVo5HIE4gyEfNqsVn0+fia2SS5FvSoQCp9Yru7V74DgcDvLlOlcv
      X+Lpk8eMj3Uvxm2dCmuHecJ+N5vbSUamp/E7zr05VYVsNoeiaihKh0azTcDv1dvmK7t88egA
      h8tButJhLNZtXACwa012U2lEycf4+AjWc4Ii10vsHpUYm5hmZmaCkXjY0P6/u7VJbGKa0v5T
      ZM84Ed/5l5zGSfqITDrFSTZP+nCXoyrEw/6uOpKbT1he2qRUzVKWYgwNnFO1LA6CA17C4TAe
      j4dwMIDLeX6h3WH16RNq7Q7bW/uEooNdavbFAiBXubu0y+WFaR49ecrE2EjX5fxxkoZiQRKh
      1ahjdflwnB9Ugojd4SQQ8GOVrIaDH8Bid5NLbnFcbjM3M4HzvI4nCNgcTvx+P3arhMvtNNZX
      q2m2K1auXpojkTjVNXutNIV0kr3jNGpHZGRyCkevOU4Q6dQyNAQPFlFkwO/puhyLRpGsNkZH
      R7Hb7dhttm6zn9Km2QGbJFCvVXi2vs30uN6S5PD4cdssWJ1OPC6XTpXKHu7wbHULUYBQbJRg
      j0XLHYgQcNkQJSuDw+NEvI7ugdcusbRTYnFuEr/fx/raMrH4kP4tb/Ugl9PkSi1m56bxnV+v
      aBrttozdE2BidJTEcAKH1dIzwAUEQaOUTrK+uUOurhHrGbgAXqfE5tYeDc3O1HjPGk8Q8Dht
      FKptRmNesnUrM2Mx7D0maIsIJ+UO08MR3IFBvHb9S+MlXYMfoJnj2fIqP777nEjIgSMQx3vu
      hXGx0iVKWFplnq9vUilk2UpmmRoOn10enl5k+MKbX6Kxu7FCuakRGowTjQR1qsO34XB7lVyt
      gz84SCIWxib1LoRcnGw9phh04nS5z2y8L+nITcKjs/ynU4somoLLaBe9meX4OIsSjVGuHjE5
      En11TRBwuDzol3iveLkRdnlh/PQ7L9gIq2QOWN2v4ZJPaFz5hIlg90wzODLDJ6rK8s4RUl1j
      aqTnKChBwOXxYNcsSIJKW9GwSecNBw7UWpaTfAGr2qQhi4b7BGgqHc3GgM+qfyaaQupgl0rj
      hcXF6mRmcgK79VU9rUqWJ0s7RAJeXAODzEx2L15ftUeiKqssjviROxqOcwKvKTLFSgNLNcVf
      LDf43U/fxWvwoqyVCoSGxhgcCWH4BlQ7bG3v024WqGge3r4y9+qaI8TU1BShaAJsfiIeEbmj
      ni2EL54B1A7VjsTVK4sszM8R9OlNcs1Klv/w07u4tDpFSxC/Qz+4RVQq5RKFUpnDdF5nb36t
      CvSyD0WolMsUyhX2kkeMDSd62qohStBsthCtTtzn1xKqzKP795E12NzYoKOKhMMh/RtRlKjm
      06RzFeIjY0SDBupL9pC//fIxfrFO0x7EdU59ESTXi6k4hMftITTg07+NgGohTUVx4BMbKN4h
      wj3mVNQ2D+7fQ/UlEFslnQqEplJKPmetYMXf3OPJicjw+R100UoiGiBzkqUhq8zOz+ktJwDV
      A9YrA9yedPF4r9KtAmkqxfzpjrmmaWiiRDg40KXyoWmIohW10wTBgipI+AwG79ryErsnBaIu
      hYolRPDcwl9rNzk+yaLZXCTCfrQL6hCUJktLzymVyzi8Qb3lTG3z9Ol9yrKXVi3H5Pj4uZsF
      /AMhrHKWojRIoLHD04yV4dDpeL54BhBEMjvPyOZzRKIJLk3p3/eFk0PytSaKXCaVqzOi27VU
      SJ7kmZy7gtMu0Wg2dXU4gmM495d5loTFRf1iG+Agdczo9Dxup51Go6EvICrsrDwjMDpPnTKR
      wLkB0ZEpaQ5uzs2R3N1manoSq8FuIhYbDm+IhKQQDen1YYCDgyS1RgO5UaJcaRF2vXopCIJA
      IOB/+QehoP63yI0a/sQsM6489ZaLwYiBWihKTM5colSv0rSH9dc7DXb2Djho17FFvCzM6Ntq
      dfqYmj59FtoL1wedfm4fQKqt8GRDROhAupQg6nectWF8ZoF2Jc2T9SOcTjvW3llXgFIhh8Xm
      oF7K4woYtBWYGB/jKP+M46rEldnu3yva3UyODPKjn94lGk9gcRjPmk5/hGiswkjEj9VuYBYW
      bdx++wNUyYGm6A8yod1gezfJkdpECntYmHmlql2sj4hWbrz3MYuzk8QNbOJwOl3PDwdIlu1c
      HTdIvS2IdIoZkpk8pUpd90asF454+GSNYDhEu6Ne6J4g1ovsHOUolio4HQaKSD1HuS1QrpQp
      VnsERHIwE/ez+vw5w6Pj7O7unXlQdlE7Yb/m5ObiJKtrxhmHZ+bmGI94yco+xo0GryKzs7VF
      JnPE6qbeHHf/zn00SSIYGcTbPubZQUVfh6aSyRzR7mjYDWYQrG7mFuaJR4dYvHypewF8jr31
      FY6ODrn7cBlDNx6rm4BdpVCpExmefjX4z3HvmxUWb1yjXdwjX+0eWKLkYPH6TS5fXuT2O+8y
      Ee8ReE2jdHLA8uYBc5ffYiwxgNwyGJwCSBYn0ViMUEA/+wMc7qyxvLlPq3zE+mFZX0Bt89UX
      n7OzvcVR1uC6zc2VW28RcYpYJIF2+5X17TWO7CrlYoFsNs0Xd4zP0Krmj6i1rQT8LloNgx8H
      JMYnEeUqxYp+R3J1dYuJmUlWN3a5MeXn6bb+AAmA8OgkTrVOoVw1NlM6woyODhMK+Lk2071Y
      R5QYHp1gYnKa+fl5FmYmdT5JrXKGh6t7dMpHPF5ex+3VL+YATlL7NGWFXGqTH3/1kFanpzGi
      BatS4+GTDfxBfR2jMS9Pl1bZ3d1hLVlnJGwwwAVQZAV/KEwoYJzP3+rwUjpc4cHDhxwXeszL
      iszhwR6y0ubvfvQF/uCAseGgvMdaqozXP0Dpgt3zuYkYS0+XaApevM5uQbNY7Vgt4gvvT6O7
      VZ6sbHHt1k3WH/w9JcWN323w9hbsTE3GKRcLVGoGszsQDEfx21XWk1VGBw0OChEEHJIVq8Oh
      W0C/RK4WsQ4M68ygF6tAmkq5mKdUayFYDRoOtGWZYHychXHj6Q+gcLTLTidISCoxPtSt/1ut
      cLC7S7PdYucgg9VlPPAqmRTPMyqj/jJKIqaXWtHGUHyQk0yefLGCz/nqbSTXsjx4vEMk5KDQ
      dvL2lWld/XZfhJu3QmwuP6EiQyKh90oEKJfrzF57i/bhY+7tFqg129g959cbGt7oOB/EwWiS
      GZ6/gb9URO6ohG+9g8dl0P2qSq2jMuXzYZWMH6bkDDAci1BXJPzenje3YMHr8+Nye/n+x0Hs
      Xq/xzOqNcnlWpVrOEfD3CJraZnsryej0AjeH2yT3d1/sv7yqqV44YnX3hPjoFPGQwZtbAzSZ
      7fV1aoqE0qxQb4W6/HDURonlzVf7Japk4PoBqKpGPBZnID5OxMiCIUhcv/32qZbhMa7D5vTT
      2NrmYS1FYnKBWOD05WMoAJp2GrCRmJhnwee5UDVxeweorm9xP7fPxOxitycnnE7nhRIdq51c
      Ry/dl299AMC1q1cv+IZTUpkCgmIjV6zrHsTp95zavjuqqDO31osnpA632MzHSfhEQC8AwKkK
      VHXyvSuDfPFsjeg713VFxqYm2TzYwSIGef/GiIELQpunD74hOhTlIN/hs/eudV0VBBFfwHid
      86qQiENrsb6xidMb5NrcuEFTNyhJca6HM3yzmeXD+XMvFtGCzx/g2dd/jzaQILWxx2998gHn
      DUWF1CZPNo8RlA6X3/mIoLPnlaLI7B8dMzw1jtViIZ85xjM4jtPaswi2uwn0CuC53/HRJ78N
      wPz8vHERh4/Lly+/vj8AdyDMhGBh5cl9RNvHjIV6Zk5NYeXJY3yxOEtbKX74vdu6OiSnF7sk
      EAv6wfIGM6jWzPLVvU2iXo2j6DyXRi54aKKAJkggNxCMfOhFC9dv3WYnlSEQmdNdPo3TVDg6
      TOJyebG+sJH3cvPWW2zup/AMxLAZOpBZmJq7RD59iNpjfvRFp7l1U6BcqVIT/JSLBVy+Ac5v
      A7TKGZY39uiU6zxeLuL2RjEinz7GGRxhJmG8SEZVUS02PB4PZI3VuXxqnUfPjxDaZZr2MB99
      8A5eW/dv8sXGmVuYx2itDuAIJGB3jaWywtSlWcMysgohr5e0kNbFUKQzWWYu38JeXCWZrRIa
      7Zl5rS4WJ8M8/OYbrKKGIzjOQI/bhmsgzrRUPDX3WkVabaVb/RCEi13Oz4q8iCFWFFRBRMBg
      sQ7I9QrZQoMbH36Gy2Y0ZDU6WPB4fAgUDL+rlt1l6zBP2Gsh2fQRmz893dPQDKoVdjkQR3h7
      3MnyYZOJuPEDzyY3UXzjTHnKbFR9DA30zgAayYN9Wh2RxFBc7wsONHPb/O3nz/A5NbZLEqNh
      /XR6lNyjLmtE4wmdCayaS/F8a5/j5AHPkzkuz01279CKFgLBCKn9PQ5zWaydCoJ7EPc5dwjJ
      7iYeHqBUKtCUO3gCEQYNzKBqu87W5ja5Ygm3P6iPb9A0VEHEbnMwOTVp+HsLxwfYo3PMDMis
      HVfwB+Pdg0vT2Fm6x+pBjmpL0TnlrT1fxkYb1T/GpdlJvE6r4UCLDA5SKRQZn5nDbbd16ekW
      QSWdPqHWUlGbNTSrE6/z/LMTcPtCDCUSxBJDREN+nZ5fSm/zdOOISq1JLGDlztIOo4mePQtg
      e+keq/tZqpUqLm+3w6Smtll5/AjN7mR75TH7BZnhqP5lWy+esHOUJ7u/jhQawerOw3kAACAA
      SURBVNPzwlAUjVDQT73eZGx8CpeB06XF5qRWSJMtqywuzp6ZsA0XwYJ/jKiQZXU/h1XOs3WQ
      NipGdHQWrbjPRtHFDSMrEAKJ4VGCboGf3jE+u0py+HFLbTZ3johccBJidGiEiN/O13fu0e5x
      u1VVFTQVEE7/XeDaGA54aDUqpPMtXEaWE6uLG2/d5va1BUpFY0c2VdWQLALFfN5Qx0eA470d
      ZEFCaRsbBaJjs1A54qDm4sObC0QDPdO5IHLt3U+4OjfB5EhCf3/AxfLyCs9XVlhZWSbT60D4
      gtVH9yi3O9y///AsjPAlA9FRrly+xOWr17l+dZG4gbADFHIZFFXlMLnfFUUFp4FSntAw83En
      Kxv71JoGvkKcPpqByCCxaET3QpBzW2S0MKm1pyiuMM1y1rCOaqWENxQjEbSTKelN6aVykVKh
      QK1eJ1cwdrtvN8pEp2/x4Y0JiuVXdRiqQILdw8LCAlQO+XJPYWrEWCWoFtKUGgpBv4NavU1A
      t8rXKOZz2ALD/NaIsa4o2l3MzszT0oBqjnbEQ497DOVCDs0R4rOPx7q30gFfZJhrkWGUdoto
      MkmhUidm8EBlq5s/+J3fJZs5euGQ1fMl7TqPnizRaLZwDY4btjWYmOT9xAT7y/coNTuEejex
      BAvjUxM0qmXKiPg8eitPJZciV24QDLhx+AZx2/TrmYfffMPw9AxP7n3DDz55v+tyID7Bu8FB
      jrNFNE0z3uTi9SpQs1YiWyghtzUkUcMVGCTs1y8enZLCj//Djxifv0b8/PdoGprkxkYTe3CU
      UUHCEzJesMdGxzk4ypFVZRwuD+ersQZGCSXXcUVHqZULODz6sMqO3CIyOoecPKQmDTIX12sI
      wYEgBc2C1VamjnE71E6Tg4M82IvUw2/aB9A0lE6Hti3I1fEwclvvtQjQajYYiI2xsDBvMPhB
      VdqUCgUe3fspTzf1x3sCtLK7HDYdRKxVlpaesHrUbS7V1DblYpG1p3e5+2zb2AzKqVluZGLK
      cPBXcinu3LnD8vPnrG8ndYe8aarC7s42Vl+cd9+9TchjbPXKp7b56quvOSgLhL1GZVRye6sc
      VDTSqaRhHXJLJpQYZ2F+XhdX/BJJUKlWKqiC8eBuFg7YStex2+3du7PnuPbWOzgtIrMzM/Q6
      akpWOz41z1paxi3UWd3vWa8obTZXn/F8+wib3UallEPuWVv5Q1HiQSfrz5+TPC7g9RrP3vVi
      lmKzQya5R7Nn1hStLq7cuM7U1BRXrt3k9lV9QMyjbx6gWh2MT04Rs1dZP9ab01FkHq88ZnXt
      kLW1FcN2SHYvEb8buy/U1e8XmkFLxRz5XI62KiDYvcxPdu8EH+8+Z3nzEMlR5GH+gNGZS91W
      oPoJ/89ff807772Hu1RmZlw/nQNYA3GsG+tkFJmhWI9e3SrxF3/9IxZuvkNooIJ/dMQw7vRN
      eIJxvv/pp0Qi0RcZB7rrKKZWyaohpi37/NlPUnzWE1KHprG/uUpwbBrPUZY2trNDObroNCnU
      mtSFCu2OwYMCPL4B9rZ3eJg7YGz6EqHzgqS0qXfg+u33qLcU5mb1hgMAye2nkVkl6+wg2L24
      DHz1JbuLaMzFF1/8lHgs2uUvJNkc+Iam8Ww/4TgnEQhGum+2WJmev0KrXkcTFAoVudu5UBCQ
      bA4GQo7TeztNHjx6TDo8wkKPT1C+WGEwNk3rqES53mbA2SPU7QpfPtjk9u3rWA0erd+usZNM
      E/Pa2D8qElw0ePFYbMzGozSdEcS28Z6GXMtTbNkYlKrsFJuMBk9n5wt9gWyCzPNkkasL06yu
      rjI+2r3BdLi9iT0UQ643uXbzFv5ek6DVzaXZCaqFDJVSiXJbIh7R7yiLkg2rICMLDkamFhk5
      HxYpOZibnUGu5CgWSxQbKonBoLFz12uoVYq06lX2Dg7JFCoEBgJdb856/ojjmoZLqJGRPQyF
      vLrA+ifPnjPobpNs+hl2VcipA10qkNaqUVEdREMBhI5McHCIcM9GlirXKDcVLKIFh8OBz+/v
      FvjSLp9vNZAquzRsEYJGG0dAs3BI2TrMjUsT+sHfabG9vcVxOkM2m6WlSgwPxfR9JlpxSAru
      UILwgM8wYcGdr76ifHLIdjrLQHioy4W8XjxmbStJqVggn0mxVxb54Ea3wGqqit/vI5dOY/FE
      GI0bP7uTgw0OjrNU2wKRge4+C8YStIoZytU6AyMzJHrXTABah/1UjmbxmFxNYXRIv49jcwYQ
      WkWqmpvpkciZA+CFM0A6tU8qeciaU2R8Sm/HPSy3+PTmHI/uf0VT7uA02CwTJTsjE9OMTEzT
      6RirUc3sNj+9t8RQyEfLEyPs614rCBaJxOgkidHJ0yxn330CwOMbYHdji+nrN3EZqAwDwwtc
      DTaBGN8bBskgDHF+IsryXpXLVyepHTUYDPSsaSwWDteWEJ1elFYDd6+tGhAsdjweEZvtdKbU
      DTrRRiN/SJISVDZp1yLMGsycNtcAzZUVvizvMTl/lfjAOf1dsjM5bTxzdFFN8uXdx4xPz1AX
      3Xx4ZUJXZHo0xkEF5jyCLn5CAJqKwPTUKLRK7Jf1EWGtRoVCsURb6UCrQUtWkHoNEBYbY6ND
      lC1B3Ba9fiuIEsPjU6//LZpG7miTtmscoWNsBq0U0qSPUhwWWoSiQ7z0/jbeB1BlrP4hvv/h
      0Is26gfEtbkJVp8/x+kZ4Hh/G2F00nAd8BLpglw7os1BPBLBojUwdlp5hcVy8cb1m4gERP79
      3/6EkaEYl+Znu2IXRMmGz3dx2xEEBkdniYyePnjfxLzeLVew4HE72EsdYXUHGDPYIMqdHLK6
      /IymI46nkcRz+Qdcjp8TFN8w/9Enb3YyV9U2bcFBQK1RaCgYWqk7TZ6s73Ptgn0CbF48VpWD
      /SSTV/UZPwBq1Qpr2xkcIwH88Ulc55aMDn+UW1dOVUrsdj57V28Ctbu8FLa3GJpYpJZ6Tq7W
      1rmq0yqxsvScdnQRqX5CLBrR1VPKHFIs10geZZi+/g5RT08dopXZ6SmO2j68on6RvHrvP5BU
      wtwcjVGUFILn1ngXZIDqTodoFfWDIxQfIxTXffydkVwhrlxxkz05YjDqe/MN3xVV4Sh1gOod
      5/d/OGC4hpCrBbZ2tklmW8SDDppSgLcWe/JzCAJHyV384WE65RSyI9YV3aTJNVR3jA8+WkBr
      N0imSwQ83UIQjo+x0GmwlRcJOHy0e5fj32LzCE4zYUhODz6nSvmCJF+FUhmX09jy1ijnOMqW
      mFy4SltRDS1AANWGjF1sky/X6fGwQuD0TDmL1UqjVsXu8nTtNgO0Kjk2N7cpNcFhlZgZN3jJ
      WN1EIwE2MnvEh/WzEECleMKjZynmZwY4zDWIenpdN2Q2NraRgzMUa2lmZrpnjPnb32e4mCF1
      eIRaLpKrTBB6sV7tOiSvC0Vm+dkTirUGhaaN3/vsXcNicJoWsKlKhhkO3kQ9tcSPV4pEnW1q
      gXk+XvwFSFVX41SqlTL1epXU4RFlWePmjZt4et9E9TQ/eprje1fjfP5sl0/e6Y7HbZYz/Nt/
      /yOCiSlEucL0jQ+IvW7WuLA5HcrlCoom4A8Eund7q0f8mx8/ZXwoiiCAxTXAldkxfR2aSimX
      o6WJhENBw5jetYd38E5eJ9GrqnEaIFRvtuh0VCyigORwdcdQvEBtt0ifZLG5fQT93q5Jr3yy
      zeO1E2xqA2d4kJbm5PblSV0djXKWldUNWpqNxStX8fdavlSZw1SBaiGJ6B9iZlSvvyudFqVK
      A63dxBOKYu/dItdUUltLLO1liQxNcWNe32dnRTUVVeUsMcJr3KFPda+52XnsFv2mzks/c01V
      aLeaxi7G3wJ7ZJLhkIeh8UnmLnK5+HlQFXbWV9g7yoFoY25uoWsX+AznILMRkY39I+Zm9GqD
      3Rvmo48+YmZ6mtvvvEv4AlPpm0hvP+Xu43XS6eNXEVcvccf4rfcuAxqaht5JDdhbXabYVAmE
      I3iVPFsnF1ibAj4ON57xcHlDl0tJsjnwaVke7VRwayUerPWabDVO9jd4uLxOqZDlKFPQmY5b
      9RrBkVkUycbiRIxGwzgfz+bGJlsnFaLONlWjZaBcY3VnmVROI7m/bVhHamuZ548f8vjZE9aO
      Daw8aoeDTIOPvvcJ1w0SmsFpBFum3EKtFzgpv9q0e6M7dC5f4PLla7rLu8uPKcptnj38hqdP
      l2ldYLN+E516HlW0sb2xQaHWevMN3xVBZDA+TMjnAkGgVMwZ59PU2pROktTwUDbYCRYEgWoh
      w9/86Kekt5+xn9fvSH4bLJINm92G3e7Qp5IRBGxOL36fB1FTKBT18QK1SoFK4/QBNqolyg3j
      HVhRU6lodlyiTtE6xZPA00yytJ1mLNHjzdtp8Hw3y9Url5lfvEInv0+x3j16BxLTjIQcfPDB
      B6iayHBUvwYACIfCzMT8ZJqCboMTALufKxOTXLmxwOULnOY8/gEaqo258QReo9xSggWPTeb+
      3fs8WzfIxtFusL70gG+errLxfJl05Q07wWpxjz/9fJ2pkQgCoFWqxMPd+nkqWyaYOKGkebg1
      IvP0qEp0ytid+XW8NjXiLwIBOq0ahVILCwqlSgOdNylAI0emWKVjbVLu1Jib7NV6wSIIKO0a
      2wcZZoa/u8BrqoJ3cIw5ew1BEPR5LmvH/NXffUN0MILf58Vm1z/suWs3eL68zINdEYs9wLV5
      Yz+tzZ0kiivISabO1My8Xk3qyFhdTiRXgKFQr06t0lGabK2vApCvtxnRel4amkazXqFZr4Bc
      ZeewypSB+tKo1xmZv07QZb0gK3Sbo501nmefEYwM84MP9VqAbyBCNFTipCJyZdIoIszCwvV3
      KZXr+AMG60iLlfjoDE7Ny6B/Gs85l2nDNYCmaRTSe+wfF1E1gcToBLFQd8Wt0jFPNo6ZW7yM
      mttDDU0Scn53G6WmqZSLJaw2Kxa7C7uBA9nPhabSkjsIWpt66/SwCLfbrR8QmsLBxhLb6Rrj
      s4uMRc8Js6ZRLRdoyApyow52F5FQyNDZ7XWorSonhQqFQhEEgfjoVPdusKZRq5ZBsqPKDQSb
      G4/TQDfvyLQ1Czar5cJFcy2b5NHaLoHBMRanh/U+UppKMZ9he32NarPNyNUPmAg5ztphNGuc
      r6Oc3uHZfpXp0UGQKzzaK/M7H97U3ZM/WOHzpylGhmPMzM7rAmtoFvjJl3eQnQlEpcZnH72v
      q+Ng9SF17xSR5hq70gI3x/TxC1/85CfEx0bZShb5wcd6d+hG8ZA//avPeevSOLXQJW6Ono5n
      Y18gwOn24/W0KZdKFEoVnQDY/TFuv3Uq8UooSE6Wwfn61NVGyKUkf/Pv7nH90jgl1zjvTF8c
      XPMzIYjY7Tbuff45AyMzOO12nC4XuqGjtGlpdobjLtSOfs3TacuUimWsdidqrUzTN/CdBSCb
      OmAn18Jng0KpSnSsZ+u/leOr++sErB00r59CscoPP/lAV49cSfNkv83bVycvTGu4f3CA1x/E
      IpwOZl0xuUa62ODSrfexaQ0Kcne6EgGo5tNkq20kq43YYLhrxvKGh1l0tQh4PaAEedtr7JQX
      iE1wRfUTDbiwGrky231cv/Ue1UqResf42YcG46S2tih1OszcMLBYaRqKoqEiUS8ckcoUSfRs
      uqpyE0GykMkXcQVfibfhE1TLB/zl331FOlfE5nRhM8i1qWkqh9srfH33HpmmjUH/dx/8AAgi
      mtpiczuJwyj93s+L2mFr9Rm5kyzJdIaTTP7sII7udgi062XSubL+QQkCvmCYSimLzR1AqRx3
      LaS+LSu7aW7OJUiVFa6Pe/TxrY0SltAIoaCDcGIaq2C8eWixOpHLSR4ahUS+oFJtM3PpEgvT
      o8Y7560cuYYda/OE+1uFM7PgeZ4+W8bj8+LzuHV1CBbr6eA/bRAhI9UD2Fxd5utHT8inNknm
      DYREsOAPBBhKDHF0pPef6rRlLO4gVxfnuXz9Jj6bwZAVrczPTZBLHxMfncbr0lu+7O4wH3/v
      IyZmZoi63xAQI/hG+M//QK8Dn2f9/hcwep1333azfOdHNOa/x0Twu1lG2q0GLcHH7/zwh8gq
      BC6Igf25ECxMzl3G6QsRi8cpZtMY5zG2EBufIii3cfTmlwfa9TKFQhlF2mVgYJLxQeNEX68j
      4LWxvXt4mtkhLRBI9HS/O0ZE2KQkW+FwnUh83LAe0e7GabMRDwXQejcHO02er67RsVhYefQQ
      RbTz1rVLepXPFUI+ecxyUyIQN945HnRZWF7fwut0nm4eij3rnk6F9f0ytfQmjvgsC+P6BZzf
      60FQ9tlJlVkc6x4farPM2s7h6R+aimDV92nh5JBMqXGaMlEQGR6fNjSlrmwccvv9d5FE0Tgu
      2GohtbFGy+rl7bdf7TcYC4AgABqVXJqa4MIuqAz0HFxQbilMB1wIooVIwM1xow18NwE4WH/K
      6mGRSHSIoM+JzeE19En5uRAEmuUcX9/5mqtXr5E+SrF4M6RPjdip8ODxOpcmgjw9LPDRzYWu
      y3ZPkOuLs6zuHrN5fIg3GGbQ+4YTXHq4/tapfrtwUQFBxOVyobwwW1ouUCkb2R22DvMEPBJH
      DQ9x3zkLjORgbmGRL+/c5drVK9y7dxdV0/Qqn+RhfmYI7D7cXuNsDOOXr6MdZLB7/fpkZACt
      GtvbT3FZI5QzGUMB8AUj3L56FavTRa/3uOjwsbDw+s3PYq7E6PQ49+8/wysplBLT6PbtBAsu
      WmxsbeNy+3XuI9nUDvvHBRptGYtVoVhpvT4mGDjNDv3NHeqhRezNE773Ybcueu3WTZafPWTH
      YsHiiLIYN3aHfR0Tl99mcKxMMXfCUTqN6IkwYDAV/7xYHW6CwRDhcITE0IhhxBCiBa3dpFqr
      IVqMZ6KX8QAHz+9Tqre/swDAqYOYqoGACqLU7dtkdTI1rXcJ7sUZGmMscsx+us6Vd/RWoFL2
      iNThIWtra0QSE7oYCgCqSb669+TUFyhdMfQFevTgMWNXbrK38hiPL9CV1AoA1yDv37qN1ekx
      TloMbG2s4Y7PMOB1Gm7YqR2ZfKGI5PAQ8Or1++NsgbGFOWYXFnHXttkqNhgN9LRDU+lYPdy4
      tEBveAVAODGB1+cl15ghYq9xonyb3KBAIX3Acb6M0xNifLg7KMZidRBLJIjH4wwG7NRk4Tu/
      vVv1CqnkHvmajMMbYWpk8Dt7en4bRIuEVElz0LDid1qx2W1d36OpCpVqi8mpMdqqhemJEUM/
      +3xqm0fPVqmpLmamhrqSxX5bUhuPOWq5cJSe86zg6Q4j7bSotFSsQoejwxQd0Yaz1xSqadRO
      tqh5Z7kxJLCeF0kEuweO0+NnKOhiay9JuakwNhw36FeNg51tcuUm8dFxogH9C0yr5kgWGzQb
      MqNjI/qEYu0KX//o3/LTx1uUZZGpYf1eQLuYZiOVo1Gv4wuEupIBd2rH/PufPCYUCVHLHvBk
      J6PLHBJ0aXzzdAulWWUv2+HGlUkkgzHSbhTY30+RrchEDfJYNfIHrB+38LSPOWj5GBp40wyg
      KriGL/Mfx8IcHOqDWTRVRRMEUDo0ZQWLkTP3GzhJbpOrc5rTX21QqDQvPPHk58WfGKdVqFAo
      lXF7PF1vo8rJDo+2S1DN4Y8PsnNS7lGBNGrFE/aO8ggWCf9AEPvP4pYKBAfjJNe3qCgtpm/0
      qB6VJPf3bSx4Chy33GQ3vuEH3/+ou0y7ztrGFgdyESVoZWTGeNv/2fIqqjOIU6ujanD+1aSp
      HY7SBRZvf0LQI1FpGbyZVZX47DWCzSaibRp7r6MPnKa894QZcjmRBOMZID6zSCuVN7QCaYqC
      ZHeidDqns6GmX/R7o5N8NDiBqmqIFlFvzWo32NpLolhceL0gXaA2eiJTDFW2OFGCXJ98JSDG
      AqBpJLeWufP0gNrMGCVZpMe/iNUHd4ldvcn6/XtYRY3w4nu4v6P2Mjp3HeON61881UKOB4+X
      cDr8hKNxzj+LVq1CcHiazFaZazMT/P2jni15DZ48XuHK+x/hsYpsPP6SvVyYCd2RP69HaZbI
      VdtYJcDmRut06Fo32dwIlX2Wjk6YvfUR5cyxvhKrk6vvfJ/ZjoDdKmK5IHfQ1NQs5WaNctOj
      cyFPbS2T0wawHj3jecfHW9f1qUnq1TKVUoFcqWaYHBcAZ4TZyXH2DtMMXLATvLm6zP2tEz6e
      i9AOX+46I0zyJnjvpot6qwOOQWYDFwQodposrW6fpkYMDdOleUp2hodHzvYthN6F+gvkWo69
      4wJusUkqMnR2HNeFM8DQ9GW+PzBGLBw0DDSvttqUU9uo3jizgRIr+Qaj/u+uE6udBo8ePCYa
      jWIZGCL+s5pT38DecY5wMIzPbaUpK/gcrzrKHx0ne5AiHouxupNiekL/VnU7LORyRRSHhWpD
      YeiClISvQ7T7CLhbeOev4lSKFHvNUa4on3zwUtXUiL2n39Ch06RUrpLN5UDt4I9Pkgjq1ReX
      QyBZcRANWHV7BbVmE9eAE1vbgYsIDoO3u9vrY2l1nbdv3WJ95TE1WdGdZUA9zbNkg0/efhvx
      Alf111mBNLnKcbZ0Gm2mdniykeT3f/tjXR2nqRGPGLSH2Wn6uHX+MEZBxO6wIzfrtFQLkqaA
      QVywXCsi+WKMuTNsFepnAnDhGiCXz1Ev5ThMpU/Tm/eYKAfDfnKVDjNT42hIDEZC/AzOoDQy
      m9xZThH2ShxUrYbZoX8uNJVWu81gwI8vGEC0eohGBroPSbA5X51DFYng7w1mFwQi0SiVXIZa
      o05kbI6o77u9/eHUZfrh/a84LCnUT3aR3fHu7NAvDpl++T+byZzmGDqPxYrb7T5tq63O02OV
      UYM+e3D3LlVNpF7KkhjqPiPM7fEiN+sIDh9+h4BgdeDsMR1W80fce3B6NJaMnaH4oH4xLcLW
      yioqKjJWfb8BAhoOyYbT5z9NDOZxnwmk0q6xspFibDSBw2YllckxPaHXCSRB4/g4RaWuMT03
      g7tXENUODz//O1ayCtnDHcZ6Mmprisxx5jQqUHOGWJiInflhGYutIBAOR6jks1gkSXemFoDV
      FWBm6oUuFTLOGvFtsA+MMh45InlS4/LtX4I3aLvB/aebfDjp4mExwKByTLEWJ9o707QK/O3n
      TxgZiuIORhntyU9jsToYm3xDZNIbECQ7o5NzKPYBBjwTuN29Vo8Oyw+f4AiFUeol2lKIWI97
      TSlzSOplAth6BsFtbMOfn5vkwdo+jsFRnc+Rw+1n2P16vy1vKMHv/+B7rKzt0LG6dR6lp81t
      YAue5tu8iK3NNdyDU9RSK3y9fcjAb32K74U7hMUxwNWFDlaHG5SW4VG8AKLNxSef/jaSWke+
      YPNdQKWcSaK69WbV1Uf3scanQT4hGLvcZbx4rRl0L9vi4/dvXuhvUjzaYmknh8dtZ2RyoTvA
      +1uidhpokpd42INgcL7Tz4+G3KxTrqjUaxI1tYmvx9NFabcol8poooNYLIbV3jMwNY3j5C4t
      zYJW2OFpNcIP3p7rPhHnWyBYrHjdTgqlPE8300xde5eY99wjKCdJa0FiRztYxq9zsvaYxZnu
      IHNfOIEvnKBeLSHaZ5k3dLGE0PAMPxie4eGjByiqhthrwZHz/Nmf/g3xmUUEd5jb8/pItMfP
      1qlpKnGrQEsF3fvd4iFo2+PevfuEEuNMDeujuYYiYTbzBbS2hXjY3RWQpLUbrD65R9ESpXC8
      zw9++Dv0ni2utpusPXuAOjCNv7lHPXyDK8M9M55gYeH2p8xpIm6D3KAlWWHaaaduFcjl8nhs
      oTOL5QWpEUs8WtlAqRV48PAR7sCg4fkAmqZisbkIh///2s7ruY0sveK/BtDIOREAwZxAUiQl
      BkmzE+0tr12ucvnv9OO6yuVQtR5P0kgaiaIoZhKMYEDOsdFoP1AjEeimNJJmzitYQLO7771f
      ON85HsxaLerfgHatgODsZ3paWzXik2GwsDA5TKklM9MH6MdVsicdqUm+IjM26Cefz2N16VQe
      YY1KgURBZtRjxNhWWxv9VlQKaV6snxOb8JDI1gk5boSWVh9+c4bhqXsgmilp7Ga/5mPpi2MM
      gSmi3p43RpZIptNIrynf2UJFpQsEgFSnoxfJ53K4LGo9HoD+YJCyVKFUQ1umUaen3ZKxmEWk
      W8ZZPZEhfHKa4FAIs9PbFSYLgg6L1UrH5KSS0V2LnPWiI6MzWlHkJqJ/gumIRr9JUSgXsqTz
      FezeACP93RHJ3Owd8uUK3tAw0KLV7rx7AQB0Ojpmlh4Q8moYrL1Gs1ZFtHlxOhwfZX0E18pw
      Un6f1dUrwsNThDUSuk+CTo8v+G6OtWh1MhpqsX4pMRd1snGUJOS7ESIIAsOxu/RV8hy8+gVf
      X+xWPZ73IRgdxX+W4SJVYyLak6wZHMzPvl4QSod7d9VzGLQqXGZLZMsSVHcQdbFudTlBh83u
      eBOyPLx/X3ux2sL83TdfU23JeAPaFZxypcLE0jIm0JajaeQo4OabCT8/bJwTG1R/z80qUKZt
      6XaKN5gIhaNU9R6EZr9KiQOuN9lAZJBsNkep1Mbp8antZQUBOhJtqUmhrOYb2VxebC7t8Fp7
      AZicLC3Oc3G0y99eJDF7w3yxqI7zTBYzmeMjdHWnWhfoN0JvsmEziciyrGmT+snotDk7OSJx
      kcLh8VCrNphdWOgW4ZUlDve2WD+q0c57Mbg0FowgYHF4ufPZXz7pcpKncc4KEivDLqpaXDdF
      oVYpIXUEdAYRh6F7h5d1JjweLx7P9QM19Kpx6PTY7Q7kVoNKs/N6fFDj5S0esXoq8vWowqPt
      U75aUI8zBj0C//Pf3zEQ7bvmAvU2Oq0hxjxZNg4SzMS0c5Ffq0CH5wVmBrtfXEEQCA5cd75H
      Itouk3qzA4exyHmzjc2mrmgB1Os1BKON6IAbnahh1p065+zigqokYlYaeMcX3ugCaW9jtQx/
      /ff/JC8ZGZ+cYmVOW1lA0JuZvbvE4uK9j3r5ARq5E+qWKHNRK5sn2pqcZMsWZQAAEXxJREFU
      nwSdgYGRCZDbjE7FsOrrVJs9uYZeZHT6LjMjEax2Jx6ndiWqVipQKWXY3T+i0WuO8Rthd/uZ
      ivrJNeQuw7g36Eg8fvyEQqmkaRhRLWY4PT7kb9/9wOnpKaWaNiv11S8/8e3TNVZfPO82ln5z
      Ie+YCHuNwECMuTtTjA+EMOg18h2pTCJVwmg00ey1v1IUUie7HCVLzM/eY2B4AJPG2yYgk8+X
      uDyLc57SljQp5jI4Q8NMx6bURDhAlmWajQbNZpOchjaoO9jPUMCKwdXPdNRKIvP2vmovALOb
      r778DKuuRalQYOfwRPPP9LR5/P23PFt9Qab8ceOMZu8QlnqCV4kas0N/QBXoNeZnxtjd2qFt
      8GhLEopWRgb7cVv1xE+0ZQ0PD3ZYf7xKoZriNKNNQ34X2lILsyvI7Pwcc3dXGHBrOaboMLTr
      XCRTpPNqux+nL8zk2AgWu5PJyUm8t+jz6wWFajFFttRS75pKB1kRWVi6x+T0HSK3iBKvvXjJ
      xs4Wp4c7FGoaYr+dFrLoYnp6moG+Hk6S0mHr6IrllWWu4qsI9pB6GAagWeLl7gY7u1fs7u6o
      Pr483uUiVyd9usvqizVyFfWCN4s6DhJJAgE/x4cHqs8BbIFhTPULdq4kpqJvc6tbZFEkzk6O
      wGBGarUIR7Sp0fbgMH/+0klbELu0Vj4EHalBqyPgdNqQpTZaTYzfA4eHZwzeWcZrMWjnNO0m
      R/ED6vU6okvb8nN4MMrTupEZrw2zW1tK5F3Ip844OLnCaHFgtRjVE2EAgp4HX/+ZQqmC1ane
      EIrpcy5SOeRmje3tbQL9I91iYp02+UKB0MQC7v4aot2lSmDzqQSVapW9qzoRjwV3X1RTITrg
      snNwlSZlEBnpqXjVchdsxC+x6GRWV1dxBQe6q0CCgM2sY393F8XkolHMUPPYuxxiADC5iBgV
      lKlJ9C2tAX8F0e5lOOjHbLVi09i88ukrquUSh4dHLCxqNA+BRuGKptHPUizSpel0m1oVMwtL
      701sc+f77GV1eNuXZNr3mQl9+EshVTMo9sgfVwV6jb6gnec/P8Yf8KuEsQAwWon2hynXJXwh
      7QWfzWY5TiSY8ISoVZq4tQz73oFsMonN66eQyTM7d0dt1g3vVYd2BfpxBfqZnr3lRxSFVqt1
      bTqo19PWEDZuNapcnR6SafoZ8NvVw/mv4e0LsSjaMVrt9AppVEtZ3NEpJjXUmgEQdKw8vOYx
      vatPQLtBNp2i3AlgbReZGO9mpYaHp/BWC6yvrVNuKUzdfdjtFA8EoqMsKXrK9RbFYpGgxokm
      Whzkz17yvJYkOvbWIknbH0BvQKTNwcEBDUl7fASuldqatSrlavOjePy5y2O2TgpI+SNWV1e5
      zGlLfPwe8Pj68LkdmMxWjFrXWs+wfpgl4DTxckvbJfLmUPyH9gAALkot5mJTWI0yrXfIyLxP
      HVqqZNg/SWoL6elF+kIR7HqJq2SSSqNNbxJs94aJxWJMjo8wODiIx6FNQFx/tYnH78fjsKvY
      pHKzysvVJzx69IhHjx6xfazBW/otEASgQ+7yhJqs3o9f/vAf/NfP2wxOzfHg4WeaOkcg4HB5
      8Pm8xA/2NH/GYHUTDfkRdCLuG/nq7cJYioIs1VlbfU6tY2Zm7g6+Gzfq/Pwcl81IvWPC4bBi
      MhhunU99F+RmmeerG6AzMDF3F88tkuGfisff/R9zn3/F4dpP9E0+INgraiXX+PHH5/i8VurG
      AIs39WUUhc5rHaRWvQZGM2bxllDqHchcnpAuvM4dtIbiua5oSI0a+WIVq8tDwKPuBSiKQjmT
      YO3VPva+QWanxlRszR++/T8efvM1j3/8nod/+rLrNE/srZFMJjluB1kZ82F3B/A61Yvg4Jfv
      OFccbyfCbmwc+cs4ZTHMoP/dp/7O8+/JyE58LjuDw8NdIZCiKG8MTmr1BlabTaW6rSgKtWKG
      zc0dmgqMza4Q6TkB6LTZ3VgjU2lSlgz809cPVNdROt9kp+xn3nHFs0o/X0xdJ/7voEO3OT48
      xOIOMR7ycnJxhW/q7fFUSSfY30oj2wcY8Fvp6x/WzNDfh2bxAsU9yqIvx5OTHF9Mfzyt4l0Y
      Hw6xtbFJR7Hj1HJnRIfP66DSaOP3qR/q5ck+2V8Tfb3IyNgEjg8kxPnDQ/jfI/sit9sUiyX0
      BiOFQlFzAcj1IvHzLNHxady6Iuf5xtv6+uuRSElqsbr6grbOolqo/RNzGJE4iZdoygH8t8xi
      eyNRDuIZhtwWZKX7OzzhMW5xSuuCUS8iiiZMPTMYcD0Subn/tsBicQdVynCZ8zjHVyW8fREM
      JkuXHOUbKB3qioWHny2xvv5S8zosngid0302ChITs+9LggE6TTIVheWlCfQCzLu7u4WT80t4
      ry5o6Gw4LeJHySICiBYPUi7OeklBUWrkKp6PTqg10a6zvp9A12lzdzaG3mDQHrqRyiQrIl/e
      n0MQeiJDQaB/ZAp/Oc3G3hl6nVlTk/99SBzs4RmZxKaH4sUBdccIIUf3fTOLOvbPrvj8/iLf
      //iIiRF1PtKqZBDs/YwOBoAwXamywUww3I/DZiJTbGDy+FRxbuH8kMOana9WRsgk4pyKFmJR
      dTd4O36O0OlQLErYm21svSLJnRbbG9sgGrF7Q+pKEBCNzWPN5hHMNlVDTm9xMT8/x+neBtnK
      tYNML7zhEfzR2+VfABB0SMUke/s60kV1tWp7a5Owx4xvOMZo0I7uxmn4DmlEI1TO+fHnp2zF
      1WVBRWog64xU8ikuLi6uOd0fAb3FgcUAfX0hxqfv/L4vP4DeiJ0aG5tbbG1vs7lzQEMr/hZE
      asUL9vb2SKS169Hx/Tj94zP4dDkOU9oyIO/CWSJBp3P921I1y6WGokM+k3xT0Zi/paIhWpyc
      bj3ml+faqhBerw+Xt487c3NEg25VHyxXKNAX7sfn9zPSHyCd03BXB1buTmMTDWAL4+kd6AWo
      ZbhsmInFYte/o4HU8S7H6RL768/I1zXue6PAYbbD/PwdDnbWVR9Xi3l+tSerFTNUJY2IXadn
      YeU+Xk8fX6yoZxtCbguvNrbY3tpma2uTzA2fsdtHInU6XA4HzkAYt1XE0qM0nEtfcnZyRFnS
      o1TS6H2DuHvdP34D/nA6tKDDEwgRdFnQGW3YbFYcdg1hLLnK3lGaUJ8Ps9Wu4gLBNW8pfpKg
      VCpTqsuEgj7tedtb4Hdb2Hi1TSqVJCfZmJuMqkqUNocbc7vE9skFmXyNsSF1dUwnmnHYrISD
      QSx2m8o6VhAEGqU0jx4/RW8PEHDbu8Igh8POye42yWyW83SV6diE5gke335FVVLIXp5wXmwz
      cmNcsVFMsX5wRiWbolQqUu+IeJ3q6kvm6hysHvTNEhZfFKdG2Hh1ekgql6daLqOzuPDcmA3+
      5ecn9I+NYAAqF5scVJ2E3T3PptNm9ce/sV/SkdWgQ1scHsIhP4Ii4HI5sDveii/cfgK8Hopf
      P0yyvrmp+tgXHqI/4MTTN8hk1EGy8HFamdd0aAuJVJWpwT+uEXZ4dILtFo0bAEQXnz9cwOPx
      aKqxAQSjw9gNHQSzm/mZiQ9WsRN0OkxWJ5E+P6BoFw06bY4SF9i8/YhoN9tq2UN+ePyCzOUR
      a0fa3fNKpcnC0gr6dl3lqyZaXCw+eMjC3Bz3HyzjucXXIVtosPTZnwj3ecikug0wzK4gi7Fh
      QhN3uDc7Sa2mLY47HJsn5DAxOLNIRGvYyWBmfCSC1GzRNzTJSKQn1B4J8PNPj1lbe8H6aZOx
      W8QXfqVDFzXGO+G6D5Bt6HE6u61abw9kdUYcNjPJ1DFGn1rzESA4OEnx4IhjycL8nQ/X9Mlf
      nXBylcfk8GICOlLPiODviIBFz9ZeHKfFykxsEn3vjie3OD8/R1b0hPqjWC0m1ULZ3dxk56LI
      /WEXZUlB+9C/Hc+ebTB3b4bHL4+4PySydlxkZaSHl68zcGd+mWKlQFPRnvcVzU6shjZ7R5eM
      P9CusVstevYSGfocoioEajfKbG3v0jG6mZ0eu3W4f3l5lu3NbUzuKA/CPSGQLBHf3WL9uEE7
      50F095xUisLlWZy1tVd4omPUU6eMPfgLg56e59sssLGxieSfopNLQc+QrC86zl1PE4NeR0tW
      cGjRvwU9E4tfMaXXUWtoh+KixUHpcp+DTp7I6PRvkEUBrIEhZoMmxnqaE7+i1ahynEgyNxIk
      XZYZcH1YYugJDeHui751iv/QoeIPwPD8EspxAllvQtB64AYTPreTq6skifgml75RFka7K1Je
      n5+pDqQaMPIxQ/EGKOfzyJ0OhXITwa7dY6lW8lTrbfQW7RNGQM/Q+DSeQB8Dfu0a/ubmHjWr
      j1axRmRgqMsk73h/C3tkBlN2g4NUhOlbGpjlYomLfJlYSMAX7FmMepGxuQcIjlMcvrC6tyII
      hAfHaVVKlIxujI0MghYv22AmNDBKoVxEZ1JvohvPniLYPWQyedwmCfv4n5hUiZIJtEpJVnfO
      mFpYVn0HgNndz91ZiXK93RUy3n6G642MjY8jNtJ8+/iV5p/kU+fkqg3kVomL7IdzYwAa2SO+
      /3mN1OUxa4faRsm/B16uvuTV/j658yNqPc09pSPTrFWRBJHxmTnmFhaZiKjDsUZbYmx2kfGw
      h3b7w4d3lpeWsXsjPJifwh6JMT+oMZWlyCQuC0zOzBIb1aZkiHYfsdEIZxtP2LnQTmBjU6Mo
      tSImV1hVfdHpBFKJIy5zFc7jO1zl1DLs8GsVqE6xmKWuVeSQSpzsvOLV4SXrO9ra/oNTc0R9
      DkZmlunvjd0B2hIt0cn95XuYNUR9ss0Oc6N9KDYvU4MB8iWN4oPSoSbpWF65R6tS1LyOSuqA
      756sk7s45eyGrOXtW7YsEd/dxhKO8WevdmIaHJgglq+RKBmZn/g4Hv9Np/jxlVv8rH4HWE0W
      wj4XdUlQxcRSrcTh2XUns1Iqao5ENkppXr5cx5uqYFBaTN1V04ffh/Xnq8wuzfPjkzUi5haX
      498w36+SOYNWid2dPSwaKmcA7VqerYNL5r/4Bw2Fuwa7e/vUWzJ9fj8Y9PSq4w7H7hGRZOD6
      ft+mLLFyd5qnr3bpWPrUHHwA0YrVpOf04oThsR5BL0Xh7HCbbPn1y6Y3Mm6e7HbmUTqcxndY
      37pCrmboiOoNYW5iiO2TDCGbwHFJJDbcc0qUL3iZMRI0dGjr7NSr55r/i95oJhLwAw0U+e0G
      eOsCkDsyZqud463nlAammRnt7uCUkidsHl9hd4UYtkhU6zK2D6RDnJ4c0RcZ5J//5V+RFQFR
      Q4T309Ehl84ytrDA5dEeLb0TVw8rUWfQ0ygXaXT0zC0uY1ftRArNlsIXf/8Xqrk0LcH8Zq71
      Q2DQKdSw8s2XX1CIP6OkOWal0JYVzGYTJi01ZUDqgMOk8OTnRywsPiDgulmhE/D3j+AyQV0x
      azIwG5UCiWSe/YMDJsbHcQciBD03NjmlQ+Jgi0SuRnhwHJol2nIHww3JkXazRrGucPfB55iO
      kgwO9OaJCphd3I06OCuBx1BHkrtP3o7SxuIb5h+/jJIvlHFrDC69VxpRqpItK9j1RQw2mWxe
      XcKuFTLItijzM3rO0zXG+98uolvVof/tr/+LYHZSllC9/ABr24csrazQSm1z2bRrd+jeg6vj
      bX569IgnT3/h2S9PSaS1KwmfBKnBq90j2vk4+1kd1cwRuWp3s6RweQT+CRYHRNaO1XxyFFjf
      3MYqVNm/qqOrJDjNfHgfYG5pifOddfa2N8ka+pnq04jfBQNLDz8j6PXg0nBf33v2LT9tJK5p
      0LZgz8sPNPK83E9QScY5SGrfT6srwOTkJBabjcnJye6XH0CqsZessXJ/md1n32P2RFRcr/zl
      ARf5FqvPXxKJeNjci3d/h6KwHz+Eeo798xyFVIJUqZsy384ds5tqc3V8gNnlYWtbXW28yuQx
      iiYmp2cZj9hJF3ruuzWIlzzVtkjx6ghfUD26u7W1Tadd4+XWIWFrtesZ/z98dG28Yh4HLwAA
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='84' name='Sheet 2' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='104' name='Sheet 3' width='164'>
      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
      VTEC/B/dSYXy3NIszgAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='144' name='Sheet 4' width='192'>
      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
      rkJggg==
    </thumbnail>
    <thumbnail height='84' name='Sheet 5' width='164'>
      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
    </thumbnail>
    <thumbnail height='84' name='Sheet 6' width='184'>
      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
    </thumbnail>
    <thumbnail height='24' name='Sheet 7' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAADg0lEQVRYhe1WTUgyaxg9dyglswhBiRYWEQRFLSNKhMI25apWKrSpTWBQi8iIXLUoaPqh
      H8FaFJQQ4UIKSrCkTataZJAg4UJqCq0oGRMbnfdbxDf3TtPl3sCYC9ezmznnec95n/dn5g9C
      CMH/GJTcAeRGoQFyB5AbhQbIHUBuFBogdwC5UWiA3AHkRqEBcgeQG4UGyB1AbhTlY5BsNovd
      3V1sb28jkUhAqVSir68PdrsdHMfBbrfj6upKVFNVVYWNjQ1UVFRgZWUFXq8XPM/DbDZjdHQU
      KpVKpOc4Dqenp9jb24NWq8X09LTA8TyPg4MDuFwuJBIJVFZWYmJiAu3t7XC73XC73aKxKIrC
      zMwMOjs7AZIHpFIp4vV6ycPDA8nlcuT19ZVMTk4Sn8/3pf7y8pLQNE1yuRzZ2dkhi4uLJJVK
      kff3d7K+vk5WV1clNVtbW2R2dpaEw2FC07SICwaDZGpqitzd3ZFcLkdCoRAZGhoiT09PknFY
      liVOp5PE43FCCCF52QEqlQq9vb3Cc3l5OQwGA56fnyVanudxcnKC7u5uUBQFhmFgsViEFbdY
      LFhaWpLU9ff3AwDi8biEMxqNMBqNoKiPE93Y2Ija2lpks1mJ9vz8HPX19dBqtQB+4A7IZDI4
      OjqC3++HyWSS8Dc3N2BZFnV1dQAApVIJn88HjuPA8zxYlkUymfyWJ0VRwuQB4OzsDBRFQaPR
      iHTpdBrBYBAGg0F4l5cd8DmMXq+HQqEAwzDQ6XQCF4vF4PF4MD4+jqKiD+vh4WFRfVlZmWgy
      /xYvLy+Ym5uD2WyGwWAQTRL4uKdomobVaoVer/8z77ed/gHFxcVoaGiAzWbD4eGhiAsEAujo
      6EBJScnf1sdiMXAc9y3PdDoNl8uFwcFBtLa2fqm5vr6GSqUSdt5v5KUB0WgU+/v7wpl/e3vD
      8fEx1Gq1oEkkEri/v0dLS4uo9vHxEbe3t+B5HgzDgKZpdHV1fcv/4uIC1dXVqKmp+ZL/fO/8
      FXk5AhqNBuFwGAsLC0gmk1Aqlejp6cHIyIig8fv9aGpqkqw+y7JwOByIRqNQq9UYGBiAyWRC
      Op3G2NgYrFYr2tra4HA4EAgEhDqPxwOdTofNzU1EIhGsra1hfn5e4EtLS7G8vIzm5mZEIhEk
      k0nJ6gPIz2fwJxAOh4nT6SSZTOZHff6zf4KhUAg2mw0KheJHfX4BAs/w7PyzKlcAAAAASUVO
      RK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Sheet 8' width='192'>
      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
    </thumbnail>
    <thumbnail height='24' name='Sheet 9' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAYCAYAAABk8drWAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAEGUlEQVRYhe2XTUhyaRTH/3MReymIEmrRxoho4zITF2Ufi0AJIlpERWAkgbQpSIisFtGi
      Fi1yE1kRSK1aBEUIgX2bi6xIhEgzIWihVGL4cSW9ZxaR817MmYa5bzMM9wd3c55z/uf45zkP
      +BsREUQEg/m3B/i/IRoqMKKhAiMaKjCioQIjGiowoqECIxoqMKKhAiMaKjCioQIjGiowoqEC
      862GsiyL5eVltLS0QKVSoaurCz6f79PcRCKBra0t9PT0YGVlhXcWj8fR398PpVIJpVKJsbEx
      AADHcbDZbFn9vr4+3N/f52iHw2HodLps/cdnMBiQSCTAcRy2t7eh1WqhVCrR1tYGp9OZrbda
      rbw6nU6HcDj8fkjfiM1mo4WFBXp5eaFMJkMOh4NGR0eJZdmc3JmZGVpbWyOXy0Xr6+u8s1Ao
      RBMTExSPx3nxk5MTMplMPH2j0UjRaPQvZ7Pb7bSxsUFERAcHBzQ5OUmPj4+UyWTI4/GQ0Wik
      5+dnIiKanZ0lr9f7qY5EoMv3Jbq7uyGR/NGyrq4Ol5eXSKfTKCgo4OWazWYAgMfjydGJRqMo
      LCxEYWEhL+7z+dDa2orS0lIAQFNTE9xuN1iWRXFxcd65kskkLi4uMDg4CADQaDTQaDRgmPcF
      VigUqKqqQjqdRiqVQjKZRFlZ2ada37ryP5vJcRz29vZQXl6OoqKiv6UTiURQUVGRE6+vr4fd
      bsfT0xM4jsPh4SEkEglkMtmf6p2fn0Mmk2VNYhgmayYAnJ2dgWEYyGQysCwLqVSaf+Yv7aqA
      BINBMplMFAgEvpR/fX2ds/I/s7m5SSaTiViWpaurK5qens6u/NHREY2Pj1MsFstb73a7aX5+
      njKZDC8eiUTIbDaTy+XKW5vJZMjr9ZLBYCC/309ERN96Q5+enmCz2TA+Po6qqipBNLVaLSQS
      CaLRKOx2O9rb21FaWgqGYaDRaPDjxw8EAoFPa9PpNBwOB3Q6He9GJpNJLC4uwmAwQK1W5+3N
      MAwUCgVUKhUeHh7eY4L8qi+yv7+PxsZGlJSU/CMdi8WC4+NjvL29YWdnB0QEmUwGuVyO3d1d
      vL6+guM4eL1eBIPBvP3u7u4glUpRU1PDi19cXEAul6OysjKn5vT0FEtLS7weLpcL1dXV7wlf
      2juBMJvNVFtby/u0Wi2FQiEKh8M0MDBAfr+fYrEY6fX6nFy9Xk+xWIweHx9pZGSE1Go1DQ8P
      UygUIiKiVCpFFouFGhoaqK6ujjo7O7Mrm0gkaGhoiJxOZ3Zd5+bmyO1258y5urqa01uj0dD1
      9TUlk0myWq3U3NxMtbW11NHRwXsWvv0Nzcfh4SFZLJact0wobm5uaGpqilKp1C/R/+A/8U+J
      4zjc3t6iu7ub95YJicfjQW9vL6RS6S/R/+B3GW2pSJfefe4AAAAASUVORK5CYII=
    </thumbnail>
  </thumbnails>
</workbook>
